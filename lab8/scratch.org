#+title: Scratch

* [X] 1
Составление описаний лексической структуры и грамматики входного языка на основе
примера из индивидуального варианта.

Пример грамматики в языке:

#+begin_example
% аксиома
[axiom [E]]
% правила грамматики
[E    [T E']]
[E'   [+ T E'] []]
[T    [F T']]
[T'   [* F T'] []]
[F    [n] [( E )]]
#+end_example

Грамматика правил грамматик

Лексические домены:

#+begin_example
AXIOM ::= "axiom"
COMMENT ::= %.*
NONTERM ::= [A-Z]+'?
TERM ::= [^A-Z\[\]]+
LB ::= [
RB ::= ]
#+end_example

Грамматика:

#+begin_example
Grammar -> Axiom Rules
Axiom -> LB AXIOM LB Nt RN RB
Rules -> Rule Rules
Rules -> ε
Rule -> Nt Rhs
Nt -> NONTERM
Rhs -> Productions RhsTail
RhsTail -> Productions RhsTail
RhsTail -> ε
Productions -> LB ProductionsBody RB
ProductionsBody -> ε
ProductionsBody -> TERM ProductionsBody
ProductionsBody -> NONTERM ProductionsBody
#+end_example

* [X] 2
Разработка лексического анализатора для входного языка. Лексический анализ может
выполняться любым из ранее изученых способов.

* [ ] 3
Составление (вручную) таблицы предсказывающего разбора для входного языка.

* [ ] 4
Разработка алгоритма предсказывающего разбора, работающего на основе порождённой
таблицы. Реализация этого алгоритма.

Отметим, что парсер входного языка должен выдавать сообщения об обнаруженных
ошибках, включающие координаты ошибки. Восстановление при ошибках, а также
выдачу специфических текстовых описаний ошибок реализовывать не нужно.

* [ ] 5
Отображение в Graphviz
