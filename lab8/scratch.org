#+title: Scratch

* [X] 1
Составление описаний лексической структуры и грамматики входного языка на основе
примера из индивидуального варианта.

Пример грамматики в языке:

#+begin_example
% аксиома
[axiom [E]]
% правила грамматики
[E    [T E']]
[E'   [+ T E'] []]
[T    [F T']]
[T'   [* F T'] []]
[F    [n] [( E )]]
#+end_example

Грамматика правил грамматик

Лексические домены:

#+begin_example
AXIOM ::= "axiom"
COMMENT ::= %.*
NONTERM ::= [A-Z]+'?
TERM ::= [^A-Z\[\]]+
LB ::= [
RB ::= ]
#+end_example

Грамматика:

#+begin_example
Grammar -> Axiom Rules
Axiom -> LB AXIOM LB Nt RB RB
Rules -> Rule Rules
Rules -> ε
Rule -> LB Nt Rhs RB
Nt -> NONTERM
Rhs -> Productions RhsTail
RhsTail -> Productions RhsTail
RhsTail -> ε
Productions -> LB ProductionsBody RB
ProductionsBody -> ε
ProductionsBody -> TERM ProductionsBody
ProductionsBody -> NONTERM ProductionsBody
#+end_example

* [X] 2
Разработка лексического анализатора для входного языка. Лексический анализ может
выполняться любым из ранее изученых способов.

* [X] 3
Составление (вручную) таблицы предсказывающего разбора для входного языка.

|                 | AXIOM | COMMENT | NONTERM                 | TERM                 | LB                    | RB | $ |
|-----------------+-------+---------+-------------------------+----------------------+-----------------------+----+---|
| Grammar         |       |         |                         |                      | Axiom Rules           |    |   |
| Axiom           |       |         |                         |                      | LB AXIOM LB Nt RB RB  |    |   |
| Rules           |       |         |                         |                      | Rule Rules            |    | ε |
| Rule            |       |         |                         |                      | LB Nt Rhs RB          |    |   |
| Nt              |       |         | NONTERM                 |                      |                       |    |   |
| Rhs             |       |         |                         |                      | Productions RhsTail   |    |   |
| RhsTail         |       |         |                         |                      | Productions RhsTail   | ε  |   |
| Productions     |       |         |                         |                      | LB ProductionsBody RB |    |   |
| ProductionsBody |       |         | NONTERM ProductionsBody | TERM ProductionsBody |                       | ε  |   |

** Grammar -> Axiom Rules
FIRST(Axiom Rules) = LB
** Axiom -> LB AXIOM LB Nt RN RB
FIRST(LB AXIOM LB Nt RN RB) = LB
** Rules -> Rule Rules
FIRST(Rule Rules) = LB
** Rules -> ε
FIRST(ε) = ε
FOLLOW(Rules) = $
** Rule -> LB Nt Rhs RB
FIRST(LB Nt Rhs RB) = LB
** Nt -> NONTERM
FIRST(NONTERM) = NONTERM
** Rhs -> Productions RhsTail
FIRST(Productions RhsTail) = LB
** RhsTail -> Productions RhsTail
FIRST(Productions RhsTail) = LB
** RhsTail -> ε
FIRST(ε) = ε
FOLLOW(RhsTail) = RB
** Productions -> LB ProductionsBody RB
FIRST(LB ProductionsBody RB) = LB
** ProductionsBody -> ε
FIRST(ε) = ε
FOLLOW(ProductionsBody) = RB
** ProductionsBody -> TERM ProductionsBody
FIRST(TERM ProductionsBody) = TERM
** ProductionsBody -> NONTERM ProductionsBody
FIRST(NONTERM ProductionsBody) = NONTERM

* [X] 4
Разработка алгоритма предсказывающего разбора, работающего на основе порождённой
таблицы. Реализация этого алгоритма.

Отметим, что парсер входного языка должен выдавать сообщения об обнаруженных
ошибках, включающие координаты ошибки. Восстановление при ошибках, а также
выдачу специфических текстовых описаний ошибок реализовывать не нужно.

* [X] 5
Отображение в Graphviz
